{"ast":null,"code":"var _jsxFileName = \"E:\\\\web3\\\\circulus\\\\circulus\\\\client\\\\src\\\\components\\\\MainTweet\\\\MainTweet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TimelineTweet from \"../TimelineTweet/TimelineTweet\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainTweet = setOpen => {\n  _s();\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  const [data, setData] = useState({\n    userId: \"\",\n    description: \"\",\n    picture: \"\"\n  });\n  const handleChange = _ref => {\n    let {\n      currentTarget: input\n    } = _ref;\n    setData({\n      ...data,\n      [input.name]: input.value\n    });\n  };\n  const [img, setImg] = useState(null);\n  const [imgUploadProgress, setImgUploadProgress] = useState(0);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const submitTweet = await axios.post(\"/tweets\", {\n        userId: currentUser._id,\n        description: data.description,\n        picture: localStorage.getItem('url')\n      });\n      localStorage.removeItem('url');\n      console.log(\"sumbittwweet\" + submitTweet);\n      window.location.reload(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const uploadImg = file => {\n    const storage = getStorage(app);\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = ref(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    // Listen for state changes, errors, and completion of the upload.\n    uploadTask.on(\"state_changed\", snapshot => {\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n      const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setImgUploadProgress(Math.round(progress));\n      switch (snapshot.state) {\n        case \"paused\":\n          console.log(\"Upload is paused\");\n          break;\n        case \"running\":\n          console.log(\"Upload is running\");\n          break;\n        default:\n          break;\n      }\n    }, error => {}, () => {\n      // Upload completed successfully, now we can get the download URl\n      getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n        localStorage.setItem(\"url\", downloadURL);\n        console.log(\"downloaded \" + downloadURL);\n      });\n    });\n  };\n  useEffect(() => {\n    img && uploadImg(img);\n  }, [img]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentUser && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-bold pl-2 my-2\",\n      children: currentUser.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"border-b-2 pb-6\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"bg-slate-200 rounded-lg w-full p-2\",\n        type: \"text\",\n        placeholder: \"What's happening\",\n        name: \"description\",\n        onChange: handleChange,\n        value: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white py-2 px-4 rounded-full float-right ml-auto\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setOpen(false),\n        className: \"absolute top-3 right-3 cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), imgUploadProgress > 0 ? \"Uploading \" + imgUploadProgress + \"%\" : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"bg-transparent border border-slate-500 rounded p-2\",\n        accept: \"image/*\",\n        onChange: e => setImg(e.target.files[0]),\n        value: data.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineTweet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(MainTweet, \"ak5Nxkii/wmxE3s4ykILksibysw=\", false, function () {\n  return [useSelector];\n});\n_c = MainTweet;\nexport default MainTweet;\nvar _c;\n$RefreshReg$(_c, \"MainTweet\");","map":{"version":3,"names":["React","useState","useEffect","TimelineTweet","axios","useNavigate","useDispatch","useSelector","getStorage","ref","uploadBytesResumable","getDownloadURL","app","MainTweet","setOpen","currentUser","state","user","data","setData","userId","description","picture","handleChange","currentTarget","input","name","value","img","setImg","imgUploadProgress","setImgUploadProgress","handleSubmit","e","preventDefault","submitTweet","post","_id","localStorage","getItem","removeItem","console","log","window","location","reload","err","uploadImg","file","storage","fileName","Date","getTime","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","Math","round","error","then","downloadURL","setItem","username","target","files"],"sources":["E:/web3/circulus/circulus/client/src/components/MainTweet/MainTweet.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TimelineTweet from \"../TimelineTweet/TimelineTweet\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport app from \"../../firebase\";\nconst MainTweet = (setOpen) => {\n\n  const { currentUser } = useSelector((state) => state.user);\n\n  const [data, setData] = useState({\n    userId: \"\",\n    description:\"\",\n    picture: \"\",\n  });\n\n  const handleChange=({currentTarget: input}) => {\n    setData({...data,[input.name]: input.value});\n  }\n  const [img, setImg] = useState(null);\n  const [imgUploadProgress, setImgUploadProgress] = useState(0);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const submitTweet = await axios.post(\"/tweets\", {\n        userId: currentUser._id,\n        description: data.description,\n        picture: localStorage.getItem('url')\n      });\n      localStorage.removeItem('url');\n      console.log(\"sumbittwweet\"+ submitTweet);\n      window.location.reload(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const uploadImg = (file) => {\n    const storage = getStorage(app);\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = ref(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n    // Listen for state changes, errors, and completion of the upload.\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setImgUploadProgress(Math.round(progress));\n        switch (snapshot.state) {\n          case \"paused\":\n            console.log(\"Upload is paused\");\n            break;\n          case \"running\":\n            console.log(\"Upload is running\");\n            break;\n          default:\n            break;\n        }\n      },\n      (error) => {},\n      () => {\n        // Upload completed successfully, now we can get the download URl\n         getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n          localStorage.setItem(\"url\",downloadURL);\n          console.log(\"downloaded \" + downloadURL);\n        });\n      }\n    );\n  };\n  useEffect(() => {\n    img && uploadImg(img);\n  }, [img]);\n  \n  return (\n    <div>\n      {currentUser && (\n        <p className=\"font-bold pl-2 my-2\">{currentUser.username}</p>\n      )}\n\n      <form className=\"border-b-2 pb-6\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"bg-slate-200 rounded-lg w-full p-2\"\n          type=\"text\"\n          placeholder=\"What's happening\"\n          name=\"description\"\n          onChange={handleChange}\n          value={data.description}\n        />\n        <button type=\"submit\" className=\"bg-blue-500 text-white py-2 px-4 rounded-full float-right ml-auto\" >\n\t\t\t\t\tPOST\n\t\t\t\t</button>\n        <button\n            onClick={() =>setOpen(false)}\n            className=\"absolute top-3 right-3 cursor-pointer\"\n        >\n        </button>\n          {imgUploadProgress > 0 ? (\n          \"Uploading \" + imgUploadProgress + \"%\"\n        ) : (\n          <input\n            type=\"file\"\n            className=\"bg-transparent border border-slate-500 rounded p-2\"\n            accept=\"image/*\"\n            onChange={(e) => setImg(e.target.files[0])}\n            value={data.picture}\n          />\n        )}\n      </form>\n      <TimelineTweet />\n    </div>\n  );\n};\n\nexport default MainTweet;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}